<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithms on Atsushi Mori&#39;s blog</title>
    <link>http://jp.atsushimori.com/categories/algorithms/</link>
    <description>Recent content in Algorithms on Atsushi Mori&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 17 Dec 2016 09:01:25 +0900</lastBuildDate>
    <atom:link href="http://jp.atsushimori.com/categories/algorithms/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>人工知能アルゴリズムをつくるために</title>
      <link>http://jp.atsushimori.com/algorithms/</link>
      <pubDate>Sat, 17 Dec 2016 09:01:25 +0900</pubDate>
      
      <guid>http://jp.atsushimori.com/algorithms/</guid>
      <description>

&lt;p&gt;いまさらながら勉強をはじめた。プログラミングの知識をある程度得ると、もっとプログラムを小さくしたいと思い始める。たとえば、いつくつかのイベントを配列にしたりとか、ループで生成するとか、すこしでも小さなコードで多くのことをやりたいと思うのがプログラマーというものなのでしょう。とはいっても、ゲームとかCGとかハードウェアを扱うプログラマーなんかきっとパワフルなアルゴリズムをグワングワン使いこなしてるんだろうなーと思うと諦めたくもなります。ただ、物事を始めるのに遅いということはないと思うので、やってみる。現にこの数ヶ月でNode.jsとRailsとC++（の入り口）はある程度扱えるようになった。&lt;/p&gt;

&lt;p&gt;今は何かに取り憑かれたかのように毎日プログラミングをしている。今日も13時間以上ぶっ続けでコーディングしていた。それは製品づくりの佳境ということもあるけど、ある種の現実逃避なのかもしれない。今やらなきゃいけないという強迫観念みたいなものに推し進められているこのごろ。&lt;/p&gt;

&lt;p&gt;たとえば、10行で書くプログラムを3行にするとか、それはもうググってコードを切り貼りしてという世界ではない。むしろ、少しプログラミングの勉強をすると、自分の頭で考えて書いているコードがどれだけ少ないかということに気づく。別に動けばいいのだけど、もはやプログラミングは表現のツールなんだと思う。だから本人が良しとしなければ完成しないのだ。&lt;/p&gt;

&lt;p&gt;表現のツールということで言えば、音楽と似ている。音楽もおそらく音楽家同士が集まれば、ほとんどの場合どこかにコメントしたくなる。&lt;strong&gt;それは個々の表現のフィールドをもっていて、一致することはない&lt;/strong&gt;からだろう。プログラミングも似ているところがあるのかもしれない。やっぱり優秀だと一般的に言われている人のコードはスマートだ。&lt;/p&gt;

&lt;p&gt;さて、話はそれましたが、アルゴリズムの話ですね。今、人工知能のビジネス市場に入っていくために、少し遠回りな手法をとろうとしていて、そのための製品をつくっています。それは今ある技術でできるものなのでいいのですが、ボクが考えていることを実現していくためには、既存の考え方では立ち行かなくなると思っているので、原理から考えられる頭を鍛えようというのがアルゴリズムを勉強する動機です。&lt;/p&gt;

&lt;p&gt;あるいは、世の中の答えもある種のアルゴリズムによって導き出されることが多いと思うので、アルゴリズムを紹介しながら、それを日常に当てはめるとどんなことに使えるか？みたいな遊び半分でやっていきたいと思っています。&lt;/p&gt;

&lt;p&gt;おそらく数学をやっていた人なら、学生時代から「アルゴリズム」という言葉に触れるのでしょうが、ボクが初めて「アルゴリズム」という言葉を認識したのは「Google」の「アルゴリズム」です。魔法の言葉みたいな感じで、「アルゴリズムが・・・」「アルゴリズムが変わりましたね・・・」なんて会話が飛び交っているマーケッター界隈をみていると、今の頭で考えると不自然ですね。&lt;/p&gt;

&lt;h2 id=&#34;アルゴリズムとは何か&#34;&gt;アルゴリズムとは何か？&lt;/h2&gt;

&lt;p&gt;ある情報によると、アルゴリズムとは、&lt;strong&gt;ある値あるいはある値の集合を入力とし、ある値あるいはある値の集合を出力する明確に定義された計算手続き&lt;/strong&gt;とある。もう入り口から堅いんだよな。要するに計算式だね。計算には入力値と答えが必要だもんね。どちらにせよ、プログラミングの世界では日常的につかっていることなんだろうから、その延長でより高度でスマートな計算手法を身に着けていけたらと思います。&lt;/p&gt;

&lt;p&gt;そうそう、Googleの「アルゴリズム」というのが＝検索順位みたいに扱われているのが違和感があったわけですね。ただの計算式ですから。人工知能だって魔法じゃない。計算式だ。シンプルな計算だけだと決まった答えしかだせないから、ランダムな値や秩序のない値をぶつけたりして、偶然性を取り入れながら人間の脳に近づけるってこといろいろやられているみたいですね。ある種魔法か、おそらく、すでにこうしたらこうなるという計算を辿れる人はいないほど、アルゴリズムは進化しているはずだ。ディープラーニングだって扱う情報が画像の何十万、何百万というピクセルデータを追える人間なんていない、見る人によっては魔法かもしれない。&lt;/p&gt;

&lt;h2 id=&#34;アルゴリズムの種類を少し予習&#34;&gt;アルゴリズムの種類を少し予習&lt;/h2&gt;

&lt;p&gt;さて、どんなことを学ぶのかなーと思って1000ページ超えの教科書を開いてみたのだけれど、数式ばっかでなにひとつ理解出来なそう。まぁ、これはプログラミングも同じで、最初はムリと思っても、分解してやってくといつのまにか飛び級で分かった感じになると信じよう。目次から大項目だけ書いてみよう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;関数の増加&lt;/li&gt;
&lt;li&gt;分割統治&lt;/li&gt;
&lt;li&gt;確率的解析と乱択アルゴリズム&lt;/li&gt;
&lt;li&gt;ヒープソート&lt;/li&gt;
&lt;li&gt;クイックソート&lt;/li&gt;
&lt;li&gt;線形時間ソート&lt;/li&gt;
&lt;li&gt;中央値と順序統計量&lt;/li&gt;
&lt;li&gt;基本データ構造&lt;/li&gt;
&lt;li&gt;ハッシュ表&lt;/li&gt;
&lt;li&gt;2分探索木&lt;/li&gt;
&lt;li&gt;2色木&lt;/li&gt;
&lt;li&gt;データ構造の補強&lt;/li&gt;
&lt;li&gt;動的計画法&lt;/li&gt;
&lt;li&gt;貪欲アルゴリズム&lt;/li&gt;
&lt;li&gt;ならし解析&lt;/li&gt;
&lt;li&gt;B木&lt;/li&gt;
&lt;li&gt;フィボナッチヒープ&lt;/li&gt;
&lt;li&gt;van Emde Boas木&lt;/li&gt;
&lt;li&gt;互いに素な集合族のためのデータ構造&lt;/li&gt;
&lt;li&gt;基本的グラフアルゴリズム&lt;/li&gt;
&lt;li&gt;最小全域木&lt;/li&gt;
&lt;li&gt;単一始点最短路問題&lt;/li&gt;
&lt;li&gt;全点対最短路&lt;/li&gt;
&lt;li&gt;最大フロー&lt;/li&gt;
&lt;li&gt;マルチスレッドアルゴリズム&lt;/li&gt;
&lt;li&gt;行列演算&lt;/li&gt;
&lt;li&gt;線形計画法&lt;/li&gt;
&lt;li&gt;多項式とFFT&lt;/li&gt;
&lt;li&gt;整数論的アルゴリズム&lt;/li&gt;
&lt;li&gt;文字列照合&lt;/li&gt;
&lt;li&gt;計算幾何学&lt;/li&gt;
&lt;li&gt;NP完全性&lt;/li&gt;
&lt;li&gt;近似アルゴリズム&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;映画のタイトルかよっ！&lt;/strong&gt; ってツッコミいれたいくらい非日常的な言葉がならんでますね。クイックソート、フィボナッチ、行列演算あたりですかねー、少し知っているのは。先が思いやられる。&lt;/p&gt;

&lt;p&gt;個人的に気になるのは&lt;strong&gt;貪欲アルゴリズム&lt;/strong&gt;！貪欲な人間が貪欲アルゴリズムで解けるのか、ぜひ試したい。「van Emde Boas木」に関してはなぜ「木」だけ訳した？ってこれまた疑問が残ります。どうせなら全部英語にしちゃえばよかったのに。あとはだいたい英語にすれば映画タイトルにそのまま使えますね。あ、「ハッシュ表」って「ハッシュテーブル」じゃん。なんか逆に中途半端な日本語によってわかりづらくなっているような・・・基本的にプログラミングだとおおよそググっても英語の記事にたどり着く場合が多いので、ある程度の英単語なら結構みんなわかるはずだし。&lt;/p&gt;

&lt;p&gt;さてと、今年の途中から高校数学IA,ⅡB,ⅢC（Cはなくなったの？）を改めて勉強してて、数学にも大変興味がでてきているところなので、アルゴリズムをグリングリンつかえるように貪欲にがんばっていきたいと思います。まずはアルゴリズム勉強開始の宣言ということで。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>