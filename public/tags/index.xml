<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Atsushi Mori&#39;s blog</title>
    <link>http://jp.atsushimori.com/tags/</link>
    <description>Recent content on Atsushi Mori&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 10 Nov 2016 17:23:35 +0900</lastBuildDate>
    <atom:link href="http://jp.atsushimori.com/tags/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>社長とプログラマー</title>
      <link>http://jp.atsushimori.com/ceo-vs-programmer/</link>
      <pubDate>Thu, 10 Nov 2016 17:23:35 +0900</pubDate>
      
      <guid>http://jp.atsushimori.com/ceo-vs-programmer/</guid>
      <description>

&lt;p&gt;プログラマーでありながら、社長でいることはとてもむずかしいです。&lt;/p&gt;

&lt;p&gt;とはいってもボクの会社は大した会社ではないので、ただ能力が足りていないだけなのかもしれません。ただ、本当に難しいのは目に見えています。そもそも社長業というのは、「やるべきこと」をやることであり、プログラマーというのは「やりたいことをやる」という相反する性質を持っているため、双方を両立させるのはとてもむずかしいのです。それは部活と勉強を両立みたいな話なのかもしれません。&lt;/p&gt;

&lt;p&gt;誤解を生みそうなので、それぞれの性質についてもう少し説明しましょう。社長業は「やるべきこと」をやることと言いましたが、じゃあやりたいことをやっていないというわけではありません。多くの社長は、「やるべきこと」の中で「やりたいこと」を見出して、楽しんで毎日を過ごしていることでしょう。でもそれは適用しただけであって、いつのまにか本能が消えてしまうということも多いのではないでしょうか。なぜ、「やるべきこと」が多いのか？それは、1人の社長でも100人の社長でも必ず多くのやるべきことが自動的に発生する仕組みになっているからです。人数が少なければ、経理や計画、日常の実務コントロールなどですぐ手一杯になり、人数が多ければマネジメントに大きな力を注ぎます。もっと複雑になるのだと思います。また、やりたいことが仮にあったとして、それを実現するためには自分の手だけではできないことが多く、経営という船に乗っている間に次々と変化していき、ほとんどの「やりたいこと」に着手すらできないでしょう。&lt;/p&gt;

&lt;p&gt;対してプログラマーは、どんなに忙しくてもつくってしまいます。できるとわかっているし、仕事としてプログラミングをやったことのある人であれば、作業量は想定できます。自分がやればできるのです。また、技術への関心がとても高く、次から次にワクワクするような技術に出会い、また作りたいものができてつくります。つくる人なんです。だから、できないことはない。もしかしたら作れないかもしれないという疑念は持たないことが多いはずです。そうはいっても会社でのプログラミングでは納期に追われ、やりたいことができないという人もいると思います。ただ、大きな違いは必ず実現することができるのです。&lt;/p&gt;

&lt;p&gt;つまり、両方をミックスすると時間がどうしても足りず、双方を食いつぶし続けるため、苦痛なのです。常に葛藤を抱えなくてはならない。ドラマでありそうな「わたしと仕事どっちがだいじなの？」という結末が待ち受けています。&lt;/p&gt;

&lt;p&gt;それでも、どちらもやめれないので、なんだか中途半端な気がしてきてまた葛藤する。実際に双方の機能がプラスとマイナスで打ち消し合って、気づいたら大きく物事が変わっていない日が続いているということもあります。&lt;/p&gt;

&lt;h2 id=&#34;岩田聡さんは本当に尊敬する&#34;&gt;岩田聡さんは本当に尊敬する&lt;/h2&gt;

&lt;p&gt;そうした理由から、多くの社長プログラマーは失敗するはずなのです。成功するためには、どちらかを封印しなくてはいけません。しかし、これは多くの場合の話であって、実際に両立していた人がこの世にいます。昨年お亡くなりになってしまいましたが、任天堂の元社長である岩田聡さんです。理想です。プログラマーにとっては知らない人がいないくらい有名ですが、プログラマーであり、社長であるという生き方を最後まで突き通した人物はこの世界にどれだけいるのでしょうか。多分ほとんどいないはずです。もちろん徐々にプログラミングする時間は減っていったと思いますし、あれだけの会社の経営者ですから、それは当然です。しかし、絶対にこの人はプログラマーであると認識してしまうのです。&lt;/p&gt;

&lt;p&gt;実現は難しい社長業とプログラミングという２つの性質に思うところはありますが、できることは岩田さんをみれば一目瞭然です。きっと、すべてをとったんだと思います。社長業もプログラマーである自分も。&lt;/p&gt;

&lt;p&gt;それは絶対に容易でないはずで、どちらも好きでいなければできません。どちらかに嫌悪感を持ってしまいがちですが、どちらも好きでいた。それがすごいことだと思います。そうとう頭が柔軟で、寛容だったんだと想像がつきます。アセンブリを読めて書ける社長なんてほとんどいないですからね。。（アセンブリがすごいわけでなく、そこまで深く知ることの興味力がすごい）&lt;/p&gt;

&lt;h2 id=&#34;プログラマーでありながら社長であり続けるためには&#34;&gt;プログラマーでありながら社長であり続けるためには&lt;/h2&gt;

&lt;p&gt;少しずつでも理想をつくり続けること、楽しむこと、チャレンジし続けること、人を好きでいること、選択を迫られたらどちらもやる方法を考え続けること。そんなところでしょうか。シンプルでいきましょう。&lt;/p&gt;

&lt;p&gt;整理したところで、一つ朗報を。&lt;/p&gt;

&lt;p&gt;社長業とプログラマーが共通することもあります。&lt;/p&gt;

&lt;p&gt;それは、仕組みづくりです。日常のタスクから組織づくりまで、社長業には仕組みづくりがつきものです。プログラマーにとっては、仕組みづくりこそがプログラミングの本質です。だから、プログラミングを社長業をやっていると、とても便利な解決策を模索することが可能です。また、社長業がたとえ作業的になりがちなときにも、新しい技術が、新しいアイディアの材料になり、多方面に想像力が働きます。もし、双方が両立できるような人間になれたのなら、それはいまだかつてないとても便利なものを生み出せるに違いありません。&lt;/p&gt;

&lt;p&gt;ボクはいつまでもプログラマーであることを自覚して生きていくつもりです。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>